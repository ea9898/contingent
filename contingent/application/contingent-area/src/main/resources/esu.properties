#\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0415\u0421\u0423 \u043f\u043e\u0441\u0442\u0430\u0432\u0449\u0438\u043a\u0430
#\u0421\u0442\u0440\u043e\u043a\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0415\u0421\u0423
esu.servers=172.29.34.51:9092,172.29.34.52:9092,172.29.34.53:9092
#\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u0441\u0442\u0430\u0432\u0449\u0438\u043a\u0430
esu.producer.id=SelfNotifyContingentERP
#\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u043e\u043f\u044b\u0442\u043a\u0438 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438
esu.producer.error.send.timeout=300
#\u041a\u043e\u043b-\u0432\u043e \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u044b\u0445 \u043f\u043e\u043f\u044b\u0442\u043e\u043a \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u043f\u0440\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430\u0445 \u0441 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u043c
esu.producer.error.retries=3
# Topics
esu.producer.attachment.topic=SelfContingenAttachement
esu.producer.subscriptions.topic=SelfContingentSubsctibtions
# Kafka producer settings
# Producer timeout
esu.producer.produce.timeout=1000


#\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0415\u0421\u0423 \u043f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044f
# Kafka consumer properties
# Consumer group id
esu.consumer.id=SelfNotifyContingentERP
# Number of consuming threads on local server
esu.consuming.threads.number=1
# Consumer session timeout
esu.consumer.session.timeout=15000
# Here consuming max 100 records every 10 sec.
esu.consumer.poll.max.records=100
esu.consumer.poll.timeout=10000
# Time (in ms, "-1" - never) for consumer to suspend after critical error.
# When this time passes the consumer will try to resume work.
esu.consumer.resume.container.after.failed=120000
# Topics
esu.consumer.attachment.topic=SelfContingenAttachement
esu.consumer.subscriptions.topic=SelfContingentSubsctibtions


#+-------------------- second (0 - 59)
#|  +----------------- minute (0 - 59)
#|  |  +-------------- hour (0 - 23)
#|  |  |  +----------- day of month (1 - 31)
#|  |  |  |  +-------- month (1 - 12)
#|  |  |  |  |  +----- day of week (0 - 6) (Sunday=0 or 7)
#|  |  |  |  |  |  +-- year [optional]
#|  |  |  |  |  |  |
#*  *  *  *  *  *  *
#\u043f\u0440\u0430\u0432\u0438\u043b\u043e \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0439 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043d\u0435\u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b ESU_OUTPUT
esu.resend.publish.cron.rule=0 0/10 * * * ?

#\u0432\u0440\u0435\u043c\u044f \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445 \u043f\u043e\u0441\u043b\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e (\u0441\u0435\u0439\u0447\u0430\u0441 - \u0432\u0440\u0435\u043c\u044f) \u043d\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u043f\u043e\u0434\u043b\u0435\u0436\u0430\u0449\u0438\u043c\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0439 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435
esu.resend.timeout=600
